// üìå B√†i t·∫≠p 2: Todo List (Form c∆° b·∫£n)
// Y√™u c·∫ßu:
//   Input text v√† n√∫t "Add" ƒë·ªÉ th√™m c√¥ng vi·ªác v√†o danh s√°ch.
//   Hi·ªÉn th·ªã danh s√°ch c√°c c√¥ng vi·ªác d∆∞·ªõi d·∫°ng ul/li.
//   N·∫øu input tr·ªëng, kh√¥ng cho ph√©p th√™m.
// G·ª£i √Ω:
//   State cho todos (array) v√† inputValue (string).
//   X·ª≠ l√Ω s·ª± ki·ªán onChange c·ªßa input v√† onSubmit c·ªßa form.
import { useState, ChangeEvent, FormEvent } from "react";

function State2() {
  const [todoInput, setTodoInput] = useState<string>("");
  const [todos, setTodos] = useState<string[]>([]);

  const handleUpdateTodoInput = (event: ChangeEvent<HTMLInputElement>) => {
    setTodoInput(event.target.value);
  };

  const onSubmit = (event: FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    const trimmedInput = todoInput.trim();
    if (trimmedInput === "") {
      alert("Please enter a valid input");
      return;
    }

    if (todos.some((todo) => trimmedInput === todo.trim())) {
      alert("This todo already exists!");
      return;
    }

    setTodos([...todos, todoInput]);
    setTodoInput("");
  };
  return (
    <div>
      <form onSubmit={onSubmit}>
        <input
          type="text"
          value={todoInput}
          onChange={handleUpdateTodoInput}
          placeholder="Enter a todo"
        />
        <button type="submit" disabled={todoInput.trim() === ""}>
          Add
        </button>

        <ul>
          {todos.map((todo, index) => (
            <li key={index}>{todo}</li>
          ))}
        </ul>
      </form>
    </div>
  );
}

export default State2;
